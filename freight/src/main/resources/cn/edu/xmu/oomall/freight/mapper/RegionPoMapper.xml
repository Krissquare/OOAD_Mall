<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.xmu.oomall.freight.mapper.RegionPoMapper">
  <resultMap id="BaseResultMap" type="cn.edu.xmu.oomall.goods.model.po.RegionPo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, pid, name, state, created_by, create_name, modified_by, modi_name,gmt_create,gmt_modified
  </sql>


  <select id="selectById" parameterType="java.lang.Long" resultType="cn.edu.xmu.oomall.goods.model.po.RegionPo">
    select
    <include refid="Base_Column_List" />
    from oomall_region
    where id = #{id}
  </select>

  <select id="selectParent" parameterType="cn.edu.xmu.oomall.goods.model.po.RegionPo" resultType="cn.edu.xmu.oomall.goods.model.po.RegionPo">
    select
    <include refid="Base_Column_List" />
    from oomall_region
    where id = #{pid,jdbcType=BIGINT}
  </select>


  <insert id="createRegion" parameterType="cn.edu.xmu.oomall.goods.model.po.RegionPo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oomall_region (pid, name, state,
    created_by,create_name,gmt_create)
    values (#{pid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT},
    #{createdBy,jdbcType=BIGINT},#{createName,jdbcType=VARCHAR}, CURRENT_TIMESTAMP)
  </insert>

  <update id="updateRegion" parameterType="cn.edu.xmu.oomall.goods.model.po.RegionPo">
    update oomall_region
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        modified_by = #{modifiedBy,jdbcType=BIGINT},
      </if>
      <if test="modiName != null">
        modi_name = #{modiName,jdbcType=BIGINT},
      </if>
      gmt_modified = CURRENT_TIMESTAMP,

    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getStateById" parameterType="java.lang.Long" resultType="java.lang.Byte">
    select
      state
    from oomall_region
    where id = #{id,jdbcType=BIGINT}
  </select>

  <update id="abandonRegion" parameterType="cn.edu.xmu.oomall.goods.model.po.RegionPo">
    update oomall_region
    set state = 2,gmt_modified=CURRENT_TIMESTAMP,modified_by = #{modifiedBy,jdbcType=BIGINT},modi_name = #{modiName,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="suspendRegion" parameterType="cn.edu.xmu.oomall.goods.model.po.RegionPo">
    update oomall_region
    set state = 1,gmt_modified=CURRENT_TIMESTAMP,modified_by = #{modifiedBy,jdbcType=BIGINT},modi_name = #{modiName,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="resumeRegion" parameterType="cn.edu.xmu.oomall.goods.model.po.RegionPo">
    update oomall_region
    set state = 0,gmt_modified=CURRENT_TIMESTAMP,modified_by = #{modifiedBy,jdbcType=BIGINT},modi_name = #{modiName,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>