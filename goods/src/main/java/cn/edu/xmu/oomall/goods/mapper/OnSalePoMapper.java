package cn.edu.xmu.oomall.goods.mapper;

import cn.edu.xmu.oomall.goods.model.bo.OnSale;
import cn.edu.xmu.oomall.goods.model.po.OnSalePo;
import io.swagger.models.auth.In;
import org.apache.ibatis.annotations.Mapper;
import org.springframework.data.repository.query.Param;

import java.util.List;

@Mapper
public interface OnSalePoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table onsale
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table onsale
     *
     * @mbg.generated
     */
    int insert(OnSalePo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table onsale
     *
     * @mbg.generated
     */
    int insertSelective(OnSalePo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table onsale
     *
     * @mbg.generated
     */
    OnSalePo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table onsale
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(OnSalePo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table onsale
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(OnSalePo record);



    List<OnSalePo> getOnSaleByProductIdNorSec(Long productId);

    List<OnSalePo> getOnSaleByProductId(Long productId);

    List<OnSalePo> getOnSaleByActivityId(Long actId, @Param("state") Integer state,@Param("type") Integer type);

    List<OnSalePo> getOnSaleByShare(Long actId, @Param("state") Integer state);

    Integer getCountByProductIdAll(Long productId);


    List<OnSalePo> getOnsaleByProductIdAll(@Param("productId")Long productId,
                                        @Param("pageSize") Integer pageSize,
                                        @Param("page") Integer page);


    int onlineOrOfflineOnSale(OnSalePo po);



    List<OnSalePo>getAllOnsaleByProductId(Long productId);


    List<OnSalePo> getOnsaleAct(Long actId, Integer state, Integer type, Integer pageSize, Integer page);

    Integer getCountAct(Long actId, Integer state, Integer type);

    List<OnSalePo> getOnsaleShare(Long actId, Integer state, Integer pageSize, Integer page);

    Integer getCountShare(Long actId, Integer state);

    Integer getTimeCollidedCount(OnSalePo po);


}